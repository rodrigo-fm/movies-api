// Mocks generated by Mockito 5.0.16 from annotations
// in movies_api/test/modules/movie_api/domain/usecases/search_movies_usecase_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_api/modules/movie_api/domain/entities/movie_search_entity.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [MovieSearchEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieSearchEntity extends _i1.Mock implements _i2.MovieSearchEntity {
  MockMovieSearchEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  String get originalTitle =>
      (super.noSuchMethod(Invocation.getter(#originalTitle), returnValue: '')
          as String);
  @override
  double get voteAverage =>
      (super.noSuchMethod(Invocation.getter(#voteAverage), returnValue: 0.0)
          as double);
  @override
  String get posterPath =>
      (super.noSuchMethod(Invocation.getter(#posterPath), returnValue: '')
          as String);
  @override
  String get posterURL =>
      (super.noSuchMethod(Invocation.getter(#posterURL), returnValue: '')
          as String);
  @override
  String toString() => super.toString();
}
